<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ta的笑很甜</title>
  
  <subtitle>你好</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-02-16T07:19:13.790Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Ta 的笑很甜</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>第1章-数据结构绪论</title>
    <link href="http://yoursite.com/2019/02/16/%E7%AC%AC1%E7%AB%A0-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BB%AA%E8%AE%BA/"/>
    <id>http://yoursite.com/2019/02/16/第1章-数据结构绪论/</id>
    <published>2019-02-16T07:12:42.969Z</published>
    <updated>2019-02-16T07:19:13.790Z</updated>
    
    <content type="html"><![CDATA[<p><strong>该笔记摘抄于 《大话数据结构》<br>工作中所需要的栈、队列、链表、散列表等结构；查找、排序等算法在开发语言的工具包中都有完美实现，为什么还要学习数据结构弄懂其算法实现的原理？</strong></p><h3 id="1、数据结构起源"><a href="#1、数据结构起源" class="headerlink" title="1、数据结构起源"></a>1、数据结构起源</h3><ul><li><p>从计算机是用来进行数据计算的到现实中的问题需要一些科学有效的手段（表、树、图等数据结构）才能处理。</p></li><li><p>数据结构是一门研究非数值计算的程序设计问题中的操作对象，以及它们之间的关系和操作等相关问题的学科。<br>注：<code>这句话应该意思是，数据结构不是研究数值和数值计算的，而是研究对象（对象不止是数值，也可能是类对象或者其他），研究这些对象之间的关系（比如有什么共同点，比如顺序如何），以及操作（比如排序，插入等）</code>。</p></li><li><p>程序设计的实质是对确定的问题选择一种好的结构、加上设计一种好的算法。<strong>即程序设计=数据结构+算法。</strong></p></li></ul><hr><h3 id="2、基本概念和术语"><a href="#2、基本概念和术语" class="headerlink" title="2、基本概念和术语"></a>2、基本概念和术语</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//数据结构基本概念</span></span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">数据 – 程序的操作对象，用于描述客观事物</span></span><br><span class="line"><span class="comment">数据的特点：</span></span><br><span class="line"><span class="comment">可以输入到计算机</span></span><br><span class="line"><span class="comment">可以被计算机程序处理</span></span><br><span class="line"><span class="comment">数据是一个抽象的概念，将其进行分类后得到程序设计语言中的类型。如：int，float，char等等</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">数据项：一个数据元素由若干数据项组成</span></span><br><span class="line"><span class="comment">数据元素：组成数据对象的基本单位</span></span><br><span class="line"><span class="comment">数据对象：性质相同的数据元素的集合（类似于数组一般）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">数据元素之间不是独立的，存在特定的关系，这些关系即结构</span></span><br><span class="line"><span class="comment">数据结构指数据对象中数据元素之间的关系</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//声明一个结构体类型</span></span><br><span class="line">struct Teacher   <span class="comment">//一种数据类型</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">char</span>    name[<span class="number">32</span>];<span class="comment">//数据项</span></span><br><span class="line">    <span class="keyword">char</span>    tile[<span class="number">32</span>];<span class="comment">//数据项</span></span><br><span class="line">    <span class="keyword">int</span>        age;<span class="comment">//数据项</span></span><br><span class="line">    <span class="keyword">char</span>    addr[<span class="number">128</span>];<span class="comment">//数据项</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    struct Teacher t1; <span class="comment">//数据元素</span></span><br><span class="line">    struct Teacher tArray[<span class="number">30</span>]; <span class="comment">//数据对象</span></span><br><span class="line">    memset(&amp;t1, <span class="number">0</span>, sizeof(t1));</span><br><span class="line"></span><br><span class="line">    strcpy(t1.name, <span class="string">"name"</span>); <span class="comment">//数据项</span></span><br><span class="line">    strcpy(t1.addr, <span class="string">"addr"</span>); <span class="comment">//数据项</span></span><br><span class="line">    strcpy(t1.tile, <span class="string">"addr"</span>); <span class="comment">//数据项</span></span><br><span class="line">    t1.age = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="./images/1521700597047.jpg" alt="数据结构基本概念"></p><hr><h3 id="3、逻辑结构与物理结构"><a href="#3、逻辑结构与物理结构" class="headerlink" title="3、逻辑结构与物理结构"></a>3、逻辑结构与物理结构</h3><p>数据结构分为逻辑结构与物理结构</p><h4 id="3-1、逻辑结构"><a href="#3-1、逻辑结构" class="headerlink" title="3-1、逻辑结构"></a>3-1、逻辑结构</h4><p><strong>是指数据对象中数据元素之间的关系。</strong><br>分为四种。</p><pre><code>- 集合结构</code></pre><p><img src="./images/1521871571036.jpg" alt="集合"></p><pre><code>- 线性结构</code></pre><p><img src="./images/1521871606947.jpg" alt="线性结构"></p><pre><code>- 树</code></pre><p><img src="./images/1521871623031.jpg" alt="树形结构"></p><pre><code>- 图</code></pre><p><img src="./images/1521871650962.jpg" alt="图形结构"></p><h4 id="3-2、物理结构（存储结构）"><a href="#3-2、物理结构（存储结构）" class="headerlink" title="3-2、物理结构（存储结构）"></a>3-2、物理结构（存储结构）</h4><p>数据的逻辑结构在计算机中的存储形式。实际上是指如何把数据元素存储到计算机存储器中的</p><p><strong>数据元素的存储结构形式有两种</strong>：<br>    顺序存储结构：如数组<br>    链式存储结构：如链表，是把数据元素存放在任意的存储单元里，这组存储单元可以是连续的，也可以不是连续的。</p><p>注：逻辑结构是面向问题的、物理结构是面向计算机的，基本的目标就是将数据及其逻辑关系存储到计算机的内存中。</p><h3 id="4、抽象数据类型"><a href="#4、抽象数据类型" class="headerlink" title="4、抽象数据类型"></a>4、抽象数据类型</h3><h4 id="4-1、数据类型"><a href="#4-1、数据类型" class="headerlink" title="4-1、数据类型"></a>4-1、数据类型</h4><p>计算机需要对数据进行分类，就分出来很多数据的类型。比如 int，float 等。</p><h4 id="4-2、抽象数据类型"><a href="#4-2、抽象数据类型" class="headerlink" title="4-2、抽象数据类型"></a>4-2、抽象数据类型</h4><ul><li>1、为什么需要抽象数据类型？<br>无论什么计算机、什么语言都会面临类似的整数运算，我们可以考虑将其抽象出来。抽象是抽取出事物具有的普遍性本质，是对事物的一个概括，是一种思考问题的方式。</li><li>2、定义<br>抽象数据类型（ADT）是指一个数学模型及定义在该模型上的一组操作。它仅取决于其逻辑特征，而与计算机内部如何表示和实现无关。比如刚才说得整型，各个计算机，不管大型机、小型机、PC、平板电脑甚至智能手机，都有“整型”类型，也需要整形运算，那么整型其实就是一个抽象数据类型。</li></ul><p>Java 中 接本数据类型、引用类型</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;该笔记摘抄于 《大话数据结构》&lt;br&gt;工作中所需要的栈、队列、链表、散列表等结构；查找、排序等算法在开发语言的工具包中都有完美实现，为什么还要学习数据结构弄懂其算法实现的原理？&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;1、数据结构起源&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
      <category term="数据结构" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="数据结构" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/02/14/hello-world/"/>
    <id>http://yoursite.com/2019/02/14/hello-world/</id>
    <published>2019-02-14T09:09:29.792Z</published>
    <updated>2019-02-13T07:58:05.679Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
